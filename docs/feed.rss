<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
  <title>We Can Solve This</title>
  <link>http://sandymaguire.me</link>
  <atom:link href="http://sandymaguire.me/feed.rss" rel="self" type="application/rss+xml" />
  <description>Musings on effective life strategies</description>
  <category>Life</category>
  <copyright>2018 Sandy Maguire</copyright>
  <pubDate>2019-11-12T23:14:00Z</pubDate>
  <language>en-us</language>
  <image>
      <url>http://sandymaguire.me/images/favicon.png</url>
    <title>Sandy Maguire</title>
    <link>http://sandymaguire.me</link>
  </image>
  <item>
      <title>Making and Spending Money</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>http://sandymaguire.me/blog/making-and-spending-money/index.html</link>
      <guid>http://sandymaguire.me/blog/making-and-spending-money/index.html</guid>
      <pubDate>2019-11-12T23:14:00Z</pubDate>
      <content:encoded><![CDATA[
        <p>I read an excellent blog post yesterday: <a href="https://www.reddit.com/r/slatestarcodex/comments/duv1x8/making_money_isnt_magic/">Making Money Isn't Magic</a>. It's a great look at strategies for generating cash. Several techniques that won't get you rich quick, though they will clearly work given a year or two of preparation. And significantly less lead time if you come ready.</p>
<p>Anyway, this got me thinking about my approach to this money stuff --- which is notably different than how most people seem to think about it. My family is aggressively the upper middle class. With the notable exception of a failed startup in the extended parts of the tree, every one of them works as a professional or at a not-for-profit. You name it, we got it. From engineering to law to medicine to police to university professor --- my family has flourished by having a job and working for the man.</p>
<p>Tried and true, it's a strategy that's been working for us for generations --- at least as far back in the lineage as I'm privy to.</p>
<p>With the exception of my uncle, there isn't a shred of entrepreneurship anywhere in the blood. My family is particularly risk averse; not only in business, but also in temperament. The emphasis is and has always been on credentials and a good job with a good salary. Although no one would explicitly say it, I suspect they equate a hard day's work with both financial success and with honesty. To make money without exchanging it for time at a linear rate is both unfathomable and immoral.</p>
<p>Me, I'm much more of a libertarian than my family is. Its the source of no end of (mostly) good-hearted ribbing at the Maguire-family dinner table. I believe that money is just and foremost a measure of value. We exchange money for things we care about more than money --- otherwise tautologically we'd hold on to it.</p>
<p>If someone is willing to give you money, it means you are creating value for them one way or another. They must think it's worthwhile. This was the first big hurdle in debugging my brain about money --- and huge shoutout to <a href="https://joshkaufman.net/">Josh Kaufman</a> for spending an evening setting me straight. Where things go weirder is on the other side of that transaction. Just because someone is willing to pay me to do something doesn't mean I must do it. Even if the money is really good.</p>
<p>Last week I stopped responding to a recruiter trying to place me at a job offering me half a million in salary. Tempting to be sure, but he got miffed when I asked to use Hangouts instead of doing a phone call. I don't have a phone, you see. But instead of just saying yes, he got grumpy. I'm not sure if he's lazy, inflexible, or incompetent, but either way, it reflects poorly on both him and the company. I don't need the money, so why would I subject myself to that kind of an environment?</p>
<p>My rule of thumb is that the more a job pays, the more unpleasant it is. This is not a deep truth about the universe, but it seems to be a good heuristic nevertheless. If a job were good, they wouldn't need to pay people so much to fill it.</p>
<p>Clearly this company thinks I'm worth the pay, but are <em>they</em> worth <em>my</em> time and attention?</p>
<p>The interesting thing about knowing how to make money is that it makes you care less about it. Once it stops being hard, you can just stay prepared and make some whenever you need it. I can't generate \$10k overnight, but certainly could in two weeks --- probably in one if my life depended on it.</p>
<p>This is unfathomable to most people in most of the world. Nobody in Ottawa would give me an apartment because I didn't have any "steady income." They didn't care that I could pay the entire lease upfront, nor that I <em>actually offered</em> it to them to get around the income "issue!"</p>
<p>There's an excellent quote in the Elon Musk biography:</p>
<blockquote>
<p>Every time Tesla interacted with Detroit it received a reminder of how the once-great city had been separated from its own can-do culture. Tesla tried to lease a small office in Detroit. The costs were incredibly low compared with space in Silicon Valley, but the city's bureaucracy made getting just a basic office an ordeal. The building's owner wanted to see seven years of audited financials from Tesla, which was still a private company. Then the building owner wanted about two years' worth of advanced rent. Tesla had about \$50 million in the bank and could have bought the building outright. "In Silicon Valley, you say you're backed by a venture capitalist, and that's the end of the negotiation," Tarpenning said. "But everything was like that in Detroit."</p>
<p>Ashlee Vance, Elon Musk: Tesla, SpaceX, and the Quest for a Fantastic Future</p>
</blockquote>
<p>Money really and truly is just a number in a computer somewhere --- especially in the 21st century. So long as you have enough runway to last you until you're prepared to make more, you're fine. But this is where it breaks down for most people. Most people are under prepared and their spending is too damn high!</p>
<p>A few years before I retired (but after I had decided to,) I started judging amounts by how much of my retirement they would consume. After a few months of living well in Lithuania, I calculated that I could live on \$25 a day, housing included. That meant every \$25 I spent, I got one fewer day of <em>not working.</em> \$25 doesn't buy a hell of a lot; it doesn't buy a thing! It's meaningless psychologically, but my brain sure as heck understands the value of having a day off. And I'd gladly buy a <em>lot</em> of days off at \$25 a piece!</p>
<p>I found myself doing the math before every transaction --- and, almost always --- realized it wasn't a worthwhile trade. That's a powerful technique they don't teach you in school.</p>
<p>I'm not saying you too should measure your life in terms of \$25-per-day retirement, but by god, measure it in terms of something meaningful to you! If you're saving money, what are you saving it for? If you don't set a concrete, specific goal, you'll never get there --- forever making money you don't need to spend on things you don't really want.</p>
<p>Is "owning" a mortgaged house really worth the down payment and mandated years of slavery to pay off the rest of it? I'm not so sure, but I do know how much life you can buy for that same down payment. And I guarantee you that the grind to make the mortgage payment gets in the way of a lot of preparation to make money.</p>
<p>Out of all my professional engineering friends, I'm probably the poorest of all of them, likely by a factor of 5x or more. But I haven't worked a job in two years. I travel all around the world on a whim, and spend month at a time living on tropical islands and doing scuba everyday. Amazingly, despite this, my bank account has the same number it showed the day I quit working.</p>
<p>I don't live off the interest or any "safe" strategy like that --- I just have lots of time and energy to create. And that's the kind of stuff that people find valuable and are willing to pay me for. Is it a lot of money? No, it works out to about minimum wage, but that pays for rent, food, travel, and diving vacations. Crucially, it's not a minimum wage that I need to spend 40 hours a week earning.</p>
<p>Meanwhile, every time I go to visit my professional friends, I'm struck by <em>just how miserable</em> they are. And what's worse is they don't even notice it --- not even after breaking into tears at the mall food court. But this is a choice that they are making, every day. It's the safe path that I inherited from my upper-middle class upbringing, and likely they from theirs. But all you need to do is pay rent and food. Literally all the rest is non-essential bonus stuff.</p>
<p>Find a way to take care of that part, and then spend a lot of time thinking about what you want your life to look like. How much money do you need to make that happen?</p>
<p>One common objection I hear to this is "but I don't know, so I will keep making money until I figure it out." This would indeed be a good strategy if it weren't based on a fundamental misunderstanding. Deciding what you want your life to look like is scary as hell ("what if I get it wrong?") and so defaulting to the status quo is a defense mechanism.</p>
<p>Instead, we must ask ourselves whether we want the rest of your life to look like it does now. We must come to grips with the fact that this is all it's ever going to be, unless we change it. This is all we get. Lets try our best not to squander it.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>The Mechanics of Writing a Book</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>http://sandymaguire.me/blog/book-mechanics/index.html</link>
      <guid>http://sandymaguire.me/blog/book-mechanics/index.html</guid>
      <pubDate>2019-11-03T12:56:00Z</pubDate>
      <content:encoded><![CDATA[
        <p>One of my core tenets is that processes are much more important than results. A well-executed result is good for me, but a good, reified process is good for the world. Far too much human ingenuity is spent figuring out how someone else made something cool, and we'd all be better off if we could just communicate those things openly.</p>
<p>If you haven't heard the good word, I'm actively writing a book called <a href="https://www.patreon.com/designandinterpretation">Design and Interpretation of Haskell Programs</a>. It's about writing good and robust software in Haskell, something that is regrettably not yet very well known. But don't worry, I'm not going to talk about Haskell today. I want to talk about how I go about writing a book.</p>
<h2 id="where-does-a-book-come-from">Where Does a Book Come From?</h2>
<p>I write practical nonfiction. My impetus to write nonfiction comes from spending a lot of time thinking about just how frustrating life today is, and how it doesn't need to be that way. Paul Graham has a quote on this that I really like and identify with:</p>
<blockquote>
<p>Live in the future, then build what's missing.</p>
<p>-Paul Graham</p>
</blockquote>
<p>For me, writing books isn't about <em>building,</em> but about <em>bridging.</em> In technology, most of our problems were solved 30 years ago, but nobody knows about it because minds are slow to change and academics are particularly bad at communicating. As such, my work doesn't contribute anything new, it just synthesizes other people's work into one place.</p>
<p>This is great news, because it means that I can just spend lots of time reading weird, obscure things, and keep track of which ones feel like they're onto something. I'm very familiar with the day-to-day workings of my field, and by paying attention to research that tackles the everyday problems, that's most of the work right there.</p>
<p>At the end of the day, a book comes from wanting the world to be different, and, in particular, knowing in what way you'd like it to be different. If your personality is like mine, this is sufficient motivation. Knowing the right answer and feeling like society is to sluggish to get there on its own makes it feel like writing this book is a <em>responsibility</em> that you have to the world.</p>
<p>If you are going into this project to get rich, <em>stop right now.</em> It's a) the wrong motivation, because you probably won't, and b) going to be very obvious to all of your readers. Audiences can smell a cash grab a mile away, and aren't likely to reward you with their hard-earned cash.</p>
<h2 id="getting-started">Getting Started</h2>
<p>I begin by identifying a theme for the book. Roughly, what is it going to be about? This thing should be the length of a subtitle, for example "type level programming in Haskell" or "a guide to building robust software." Having a theme helps identify who would be interested in such a thing, and roughly what sorts of things you should be writing about (which is less obvious that it sounds!)</p>
<p>This gets me thinking about the people that I know personally. Are any of them the target audience? I'll make a list of people I know who might be interested, and then roughly estimate how much they know about the topic at hand. I am always looking for someone I know personally who is a) smart, b) interested, and c) average in their knowledge on the subject.</p>
<p>After identifying one to three of these people, I'll go and explicitly say to them "hey, I'm thinking about writing a book on topic X --- how likely would you be to buy such a book?" I will iterate on the theme, and the people until I find a combination that evokes enthusiasm.</p>
<p>Enthusiasm is the key. I am looking for sentiments along the lines of "thank god, I've been waiting for someone to write that," or "I didn't know I wanted that, but now I can't wait," or, "shut up and take my money!" If you can evoke that sort of response, and have no reason to believe that your friend is alone in that opinion, then congratulations. You've found a market for your book.</p>
<p>It's important to target a friend who is in the average understanding. If you find someone who is far below average, your book is going to need to spend a lot of time covering first principles. If they're far above average, the pool of people who will buy your book is going to be unreasonably small.</p>
<h2 id="the-target-audience">The Target Audience</h2>
<p>This enthusiastic friend of yours is your greatest asset in writing a book. You are writing this book <em>for them,</em> and for no one else. The goal is to take your friend, at their current level of understanding, and gently lead them to your point of view. Doing so requires a deep understanding of what you want to teach, but it requires a <em>deeper</em> understanding of the way that they see the world. It's okay --- and natural --- to be a little fuzzy on what you're going to write about. That part gets solved by actually writing it. But you need to understand your friend well enough that you can frame the problem and motivate the solution in language that they can understand.</p>
<h2 id="promise-yourself-to-get-it-done">Promise Yourself to Get It Done</h2>
<p>I always make a promise to myself that if I'm going to do this work, I'm not going to waste my time by <em>not finishing it.</em> That's not to say I should sink my costs if the book truly isn't very good, but it's a good defense against akrasia.</p>
<p>This comes in two flavors. The first is that while I'm committed to finishing the project, I need to work on it <em>every single day.</em> "Working" here is intentionally defined very loosely. Fixing a typo counts as doing work. Writing a single sentence, or editing a paragraph for flow counts as doing work. Obviously, writing significant amounts of prose also counts as doing work. So long as my document isn't in exactly the same state as it was 24 hours ago, it counts.</p>
<p>The psychology here is that projects that are always being worked on are eventually finished. But, it's an acknowledgment that life can often get in the way of the best laid plans. And so, we define progress by input, not by output. So long as you do <em>something, anything,</em> you haven't broken the streak.</p>
<p>Having a low barrier on this front is amazingly powerful. Often I'll find myself in bed getting ready to sleep, and realize "oh shit, I didn't work on the book yet today!" My initial reaction will be "eh... fuck it." But having such a low barrier to progress means I'll feel like a piece of shit if I'm <em>so lazy</em> that I can't manage to pull open my laptop, write a single sentence, and then put it away again. It's the inertia the counts, not the speed.</p>
<p>Working on it every day is a good way to prevent the accidental death of your project. But it's not a good strategy if this thing you're creating <em>truly isn't worth finishing.</em> For that, I also write a quick document describing under which circumstances I'm allowed to quit, and when. For example, on my last book, I wrote this:</p>
<blockquote>
<p>When To Quit</p>
<p>There will be no quitting, unless another book comes out before this, also targeted explicitly at type-level programming in Haskell, which is judged by me to be superior.</p>
</blockquote>
<p>Notice how clear that is. It gives an explicit stop condition --- someone writing a better book, <em>as judged by me.</em> In fact, while writing my book, someone else did publish first, but after skimming a few chapters, it was clearly an inferior product. Rather than let it get me down, I realized that neither my mission nor the world had changed in light of this other book, and so I should keep my head down.</p>
<p>And the market agreed with me. To date I've sold at least 20x more copies! The power of strategic perseverance is a powerful one,</p>
<h2 id="work-on-philosophy-first">Work on Philosophy First</h2>
<p>Spend a lot of time writing the philosophy of the way you see the world. Describe the problems you see with great anguish. Really sell just how painful this experience is, and try to motivate a world in which we haven't already internalized this pain. How if your solution were already the status quo, we'd never think about trying the things we're doing now. Rhetoric is a powerful tool here.</p>
<p>Your argument doesn't need to be technical. Not yet. All it needs to do is be strongly motivating. You need to convince your reader that this problem is worth solving, and, by extension, that your book is worth reading.</p>
<p>Throughout the writing process, I will often finish five or six chapters along these lines. Few if any of them end up in the final print. But the exercise is not for naught; by expounding on these issues you will clarify exactly what problems you see, you will discover a natural structure for the book, and you will come up with good material for copy.</p>
<p>The philosophy is much easier for people to understand than the technical solutions. The latter require significantly more attention, and so by making the philosophy as persuasive as possible, you are readying your reader for the difficult tasks ahead. In my experience, very few nonfiction books take the motivation aspect seriously enough. With so many excellent books out there, it takes quite a lot to convince me that <em>this one in particular</em> is worth reading.</p>
<p>Nailing the motivation is by far the hardest part of the process. So spend lots of time waxing poetically on the way the world should look. Tackle it from as many different angles as possible. If possible, show that several real problems all share the same structure, and thus that your one solution would solve all of them simultaneously.</p>
<h2 id="test-your-assumptions">Test Your Assumptions</h2>
<p>Take two of your best motivating pieces, and start rolling with them. Find a relatable example, show how it's a problem with traditional methods, and do a case study of applying your technique to it. You don't need to spend a lot of time on this, just enough to convince yourself --- and an audience --- that everything works as you say it does.</p>
<p>Write prose around the example, explaining every piece in great detail. Assume the reader knows exactly what your target audience friend does, and explain the bits that you would explain to your friend. Walk them through your thought process, about when this technique can be expected to work, and good heuristics for how to use it.</p>
<p>Tackle two of these case studies, ideally two that are in very different domains, which can showcase different aspects of the solution.</p>
<p>Compile the two case studies and two best pieces of philosophy into a single document, and spend an hour or two polishing it. When you're done, here comes the scary part: sharing it. You need to distribute this document of yours widely. Make it freely available in the circles that your ideal readership hangs out in. See how people respond to it. Make the necessary changes in order to convince them that your nascent book is worthwhile.</p>
<p>If you've done your homework and made a compelling case, I suspect the audience will be supportive. But there's always the chance they aren't, and this too is valuable. Honestly consider their concerns. If you can't convince your core audience to get excited about this thing, you're probably not going to convince a wider audience either. If it seems like the problems are solvable, go back to the drawing board and try again. Otherwise, now might be a good time to cut your losses.</p>
<hr />
<p>This is about as far as I've gotten in my new book, so it's as much as I've been reminded about. More to come as I get further in.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Moments of Strength</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>http://sandymaguire.me/blog/strength/index.html</link>
      <guid>http://sandymaguire.me/blog/strength/index.html</guid>
      <pubDate>2019-11-02T15:21:00Z</pubDate>
      <content:encoded><![CDATA[
        <blockquote>
<p>It is important in life not to be strong, but to feel strong.</p>
<p>-Christopher McCandless</p>
</blockquote>
<p>I'm writing this in the park, sitting in the first sun that Munich has seen in a week. This wasn't my plan for today, which was to stay inside in a Haribo induced stupor, watching Starcraft. You see, I've been traveling now for three months, sleeping on strangers couches and doing nonstop programming. I'm absolutely exhausted, and so my mini stay-cation in Munich has been less productive than I'd like.</p>
<p>What I want to talk about today are moments of strength --- those rare times when you're feeling slightly more powerful than usual. These are exceedingly valuable events and should be sought out and capitalized on whenever they occur. Using your moments of strength wisely in your most powerful tools for improving your life.</p>
<p>The other day, in a moment of strength, I realized I was wasting too much of my attention on watching useless YouTube videos And so, while I had the clarity and ability to do so, <a href="/blog/reclaim-your-attention/">I blocked the entire website</a>. Now in my moments of weakness, I can't renege on this, and am forced to find more productive ways of spending my time. I took advantage of my moment of strength, and fixed a glaring problem in my life.</p>
<p>The idea is that most of the time, we are not very strong, and so we should take these rare opportunities to change our lives so we don't <em>require</em> strength. And the easiest time to do this is when you are feeling strong.</p>
<p>I have a friend who says she feels trapped in her life. We have spent a lot of time together over the last few weeks, and while she certainly has real problems, they don't seem nearly as insurmountable to me as to her. Over this time, I've seen quite a few moments of strength in my friend, though unfortunately I've seen most of them go squandered. Rather than taking the opportunity to solve a problem, she will often bask in the feeling of strength. This is not <em>bad</em> per se, but it is strategically shortsighted.</p>
<p>Moments of strength are great opportunities for bootstrapping oneself. The next time you feel more capable than usual, even if only by a little, look at it as a rare chance to fix a problem. And act immediately on it-it might not stick around for long. That habit is what compelled me to grab my notebook, walk to the park, and write this essay that I've been meaning to get to for months.</p>
<p>Capitalizing on moments of strength is a habit you build over time. The next time you have one, use it to catalog the big problems in your life --- the things getting in the of the life you want to live. Make an actual list, and make sure it's easily accessible for the next time you have a moment of strength.</p>
<p>Circle any problems that are easy to tackle-things like making a phone call or could otherwise be solved in an hour. Put a star next to the most important item on your list. If, after making the list, you're still feeling motivated, pick one and go solve it <em>right that second.</em> Don't think about it, don't give yourself a chance to lose momentum. Just start moving. That second. Don't have a shower first. Put on your coat and start moving out the door, or start dialing the member, or whatever it is you need to actually do.</p>
<p>If you are tempted to get distracted, make a mental note to remove that sort of distraction during your next moment of strength, and then, crucially, don't get distracted. Don't let yourself stop until you've made real progress towards your goal.</p>
<p>I actually just left the park, as it was getting cold and the mosquitoes were coming out in full force. As I got home, I noticed I was hungry, and that I had quite a few interesting emails that could use some of my attention. But I know from lots of past experience that if a blog post doesn't get finished in one sitting, it never will be. And so here I am, ignoring my inbox and trying not to think about how hungry I am, because I am temporarily feeling strong and that's much more important.</p>
<p>Moments of strength beget other moments of strength in two ways. The first is that, as you start solving problems in your life, they're no longer there to get in the way of solving more problems. The second is that <em>you are actually getting stronger,</em> which itself leads to having more moments of strength. After you accomplish something you've been putting off, take a few minutes to sit and appreciate the glorious feeling that comes with it. This is the greatest feeling in all of life, better than any orgasm, meal or drug.</p>
<p>This feeling alone is enough to make life worth living. If you're not very well acquainted with it, you are in for one hell of a ride. Treasure your moments of strength, and they will reward you in turn.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Generalized One-Night Stands</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>http://sandymaguire.me/blog/one-night-stands/index.html</link>
      <guid>http://sandymaguire.me/blog/one-night-stands/index.html</guid>
      <pubDate>2019-10-07T19:54:00Z</pubDate>
      <content:encoded><![CDATA[
        <p>We're all familiar with the idea of the one-night stand. You've been feeling frisky with some <em>pent-up sexual desire</em>, and hook up with someone who is in a similar situation. Although you usually don't explicitly call it out, the understanding is that you're just two humans who want to rub their genitals together, without any implications that you'll be doing <em>anything other than that.</em> No follow up, no staying in touch. Just some raw, unadulterated adult fun.</p>
<p>Don't worry, I'm not here to talk about my one-night stands. I'm actually pretty shit at them; I catch the feelings too easily. But my god are there a lot of terrible stories on that front that maybe I'll get around to writing about one day. But anyway.</p>
<p>Last week I had a nice few days of a faux-relationship. It was clear nothing could or would happen between us long-term, but that didn't mean we couldn't pretend in the meantime. We got to spend some time cuddling, sharing our interests with one another, and just generally feeling like someone else out there cares. Just two lonely souls meeting serendipitously, and being brave enough to give it a shot.</p>
<p>It's sort of dumb in retrospect, but until this, I'd never really considered the idea that I have needs that can only be satisfied by <em>other human beings.</em> It's a vulnerable feeling, especially due to how independent I view myself.</p>
<p>But this reminded me of a conversation I had a few years back with my friend Daniel McCracken. He mentioned the idea of an <em>emotional one-night stand</em> --- one in which you find some company for the night, but unlike in a traditional one-night stand, all you're looking for <em>is the feelings.</em> This strongly resonated with me, probably because some of the most influential experiences in my life have come from <a href="/blog/showing-me-the-way/">such encounters.</a></p>
<p>But why do we need to limit ourselves to just sexual and emotional one-night stands? In true math-nerd fashion, why not <em>generalized one-night stands?</em> The coming together of two souls who are looking for something very specific from one another --- regardless of whether they can articulate <em>what,</em> exactly. What's stopping us from having intellectual one-night stands, or from talking-about-how-hard-it-is-that-our-parents-are-getting-older one-night stands?</p>
<p>I've now been traveling as part of my <a href="https://isovector.github.io/erdos/">Erdos project</a> for 10 weeks. The idea is to run around the world, sleeping on peoples couches, and doing non-stop programming in the meantime. It's a way to meet My People, and collaborate with them to help make the world a better place.</p>
<p>So far it's been a great experience and all, but programmers are not well-known for their apt social-skills. And now that I've been thinking about generalized one-night stands, I've come to the conclusion that not all of my social needs have been being met by the people with whom I've chosen to spend the immediate next part of my life.</p>
<p>When you're looking for a casual encounter, there are some obvious choices about where to go. The night club toilet, for example, is usually a pretty solid bet. But when you are looking for an emotional one-night stand, well, that's a trickier thing to sort out.</p>
<p>When I put up the call for couches to stay on, I was amazed at how positive the response was. Within a few hours, I already had two years' worth of places to stay. It was overwhelming. And I think the reason for that was that these people were looking to me to help with some of their generalized one-night stands. These people are looking for companionship in an extremely narrow niche. You don't learn Haskell by giving up easily on difficult problems, but it does aggressively filter out the people you can share your passions with.</p>
<p>Very few people can talk at length about functors, after all.</p>
<p>But the more people I meet on my trip, the deeper my understanding of this goes. It's clear that everyone I've met so far is aching for some niche intellectual discussion. But when you start looking for what else people are longing for, you start seeing it. Camaraderie. Affection. Loyalty. A role model. Confidence. Understanding. Inspiration. Sympathy, or at least someone to complain to. Respect. A feeling of worthiness. Exaltation.</p>
<p>The things that people long after are not often the things they mention. But they'll tell you in other, subtler ways.</p>
<p>As an aggressive icebreaker, I like to ask people "who are you, as a <em>person?</em>" Partially because I think it's funny when people are temporarily existentially uncomfortable, but also because I learn a lot about them from how they respond. The way they describe themselves are the things they outwardly care about, and are often more of a statement about who they're trying to be, rather than who they necessarily <em>are.</em></p>
<p>For the last few years, my unofficial philosophy has been to always behave in such a way that people considered themselves better off for having met me. Modest it is not, but at least it comes from a good place. Cementing the concept of generalized one-night stands has helped me live up to this ideal. Make it a priority to find what people are seeking, and then help them with it if you can. At the very least, it's a pretty reliable means of getting an invitation to come back and stay on their couch again.</p>
<p>The shift in perception that comes from seeing myself as a creature with social needs has been earth shattering, and the realization that <em>other people</em> have these needs too, even more so. Maybe this is why I struggled so much to connect with people in Ottawa. Maybe I didn't know how to fulfill these needs, in either myself or in others.</p>
<p>Maybe, despite the name, this is the stuff of which long-term human relationships are made.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Gatekept</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>http://sandymaguire.me/blog/gatekept/index.html</link>
      <guid>http://sandymaguire.me/blog/gatekept/index.html</guid>
      <pubDate>2019-04-19T01:10:00Z</pubDate>
      <content:encoded><![CDATA[
        <p>A few days ago I got rejected from a PhD program at Imperial College London --- a program I was <em>invited to apply for by a member of their faculty who wanted to supervise me.</em> The experience left a sour taste in my mouth.</p>
<p>The official reason for the rejection is that my undergraduate GPA is too low. 0.86% too low, in fact. Missed it by a hair!</p>
<p>In my eyes, I'm a pretty outstanding candidate. In the last two years I've solved two <a href="https://reasonablypolymorphic.com/blog/prospecting-free-monads/">major</a> <a href="https://reasonablypolymorphic.com/blog/polysemy/">problems</a> in my field --- both of which people frequently said I should stop wasting time on, because they fundamentally couldn't be solved. I didn't work on the problems to publish them or for the fame or anything; I was just annoyed that I couldn't do something that seemed so obviously <em>possible.</em></p>
<p>My <a href="https://sandymaguire.me/resume.html">professional experience</a> is characterized by doing extracurricular tasks to solve technical debt that nobody else wanted to touch, and by <em>knocking assigned tasks out of the park:</em> I single-handedly made Facebook \$60M in four months while I was an intern, and I successfully tackled design work at Google that people said I needed five years more experience in order to have any chance at.</p>
<p>The point is not to toot my own horn here, but merely to point out that I have a proven track record of self-directed study, of hard work, of executing on what I say I'm going to do, and of excelling at it.</p>
<p>But no. My average grade is 0.86% too low to qualify. Looking at <em>average</em> grades strikes me as a particularly stupid strategy for assessing PhD work. PhDs aren't supposed to be well-rounded; they're <em>experts in narrow fields.</em> Looking at average grades equally weighs my 68% in a mandated, irrelevant-to-my-degree, automatically-get-15%-for-putting-your-name-on-the-final class on "The Role of Technology In Society" against my 92% in a voluntarily taken, relevant-to-my-degree (and PhD topic) class on compilers --- widely regarded as one of the hardest three classes in the most challenging technical university in the country.</p>
<p>"The Role of Technology in Society" was clearly a waste of my time, so I did only as much as I needed to in order to pass, and no more (I was actually aiming for 51%, but that blasted extra 15% blindsided me). Compilers, on the other hand, are a subject very close to my heart, and are something I'd like to dedicate my life to thinking more about.</p>
<p>If your goal really is, as Imperial College London <a href="https://www.imperial.ac.uk/strategy/developing-this-strategy/strategy2014/mission/">claims</a>, "to deliver world class research in engineering" --- then weighing "The Role of Technology in Society" equally against actual technical topics is <em>profoundly stupid.</em> If we take them at their word that my low marks are the problem[^1] then this decision is <em>elitist gate-keeping</em> at its worst, rather than any honest attempt at producing good research. It's a reactionary strategy to willingly accept false-negatives in order to maintain its prestigious name, rather than willingly accept false-positives and actually try to do more of what built its name in the first place.</p>
<p>I sound saltier than I actually am. Seven days ago I'd never even considered applying to Imperial College London; so not being there in September is exactly the same state of affairs that my life was already in. Their decision hasn't dashed my plans or anything. Despite the fact that I'm apparently <em>not worthy</em> of attending ICL, I'm pretty sure this is a bigger problem for them than me.</p>
<p>For my part, I'm just going to keep doing my own research. <a href="https://www.youtube.com/watch?v=f61KMw5zVhg">To quote Feynman</a>:</p>
<blockquote>
<p>I'm appreciative for the work that I did, and for the people who appreciate it. And I notice that other physicists use my work. I don't need anything else. I don't see that it makes any point that somebody ... decides that this work is noble enough to receive a prize. I've already got the prize! The prize is the pleasure of finding the thing out. The kick is the discovery, the observation that other people use it. Those are the real things. The honors are unreal to me.</p>
<p> When I became a member of the National Academy of Science I had ultimately to resign. Because there was another organization, most of whose time was spent in choosing who was "illustrious" to be allowed to join us in our organization... the whole thing was rotten.</p>
</blockquote>
<p>Yeah, that sums up my feelings pretty well. Maybe it's sour grapes, but if Imperial College London really and truly believes I'm not good enough for them, well, good riddance! It's their loss, really!</p>
<p>In conclusion, I'd like to extend an open invitation. If you, like me, believe that effect systems and free monads are what programming is going to look like in 30 years, please get in touch. I'd love to talk with you. Regardless of your academic or industrial affiliation, regardless of your skill level, and <em>especially</em> regardless of your GPA. Get in touch.</p>
<p>Ideas like these are the ones that change the world, and I'm willing to dedicate my life to it. If you are too, then why the hell aren't we already collaborating?</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>You Don&#39;t Need to Be Brilliant to Do Brilliant Work</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>http://sandymaguire.me/blog/brilliance/index.html</link>
      <guid>http://sandymaguire.me/blog/brilliance/index.html</guid>
      <pubDate>2019-04-02T12:11:00Z</pubDate>
      <content:encoded><![CDATA[
        <blockquote>
<p>Greatness is something you do, not something you are.</p>
<p>-Sebastian Marshall</p>
</blockquote>
<h1 id="i">I</h1>
<p>My friend Csongor <a href="https://www.microsoft.com/en-us/research/uploads/prod/2019/03/ho-haskell.pdf">recently published a computer science paper</a> that's super interesting if you're as big a nerd as I am. The details are too much to go into here, but suffice to say, it lets us do a lot of things I'd always been told were impossible.</p>
<p>Being told you're now allowed to do the impossible is a staggering experience.</p>
<p>What's more staggering is knowing the guy responsible for letting you do it.</p>
<p>I was curious about how he'd gone about solving this problem. Part of it was a question of ego --- I'd run into this problem around the same time Csongor had. But where he'd stuck with it and eventually broken through, I'd bounced off it assuming there was a <em>reason</em> for the limitation.</p>
<p>Csongor is obviously brilliant, <a href="/blog/no-miracle-people/">but I don't think his brain works <em>significantly better</em> than mine</a>. Rather than assuming he'd solved the problem because he was smart and I wasn't, I took the position that he had some <em>skill</em> that I was missing. Skills, after all, can be learned.</p>
<p>And so I asked him. How did he start working on it? What was the process like? How long did it take? His answer to the first question[^1] was:</p>
<blockquote>
<p>I wanted to understand why this limitation was there. Then learning the answer revealed that it's actually something that can be fixed --- as is always the case with these things if you think about them enough.</p>
</blockquote>
<p>He made sure to reiterate the point:</p>
<blockquote>
<p>Though I must say that the solution is really quite obvious once you know the underlying reasons, so there was not much brilliance involved.</p>
</blockquote>
<h1 id="ii">II</h1>
<p>Sometime recently, without realizing it, I've become a big wig in my nerdy programming circle. All of a sudden people were throwing my name around in the company of the people I looked up to, whose work I'd always felt was far beyond my grasp.</p>
<p>This was puzzling to me for an embarrassingly long time. What had changed? I was still the same guy as always, doing lots of experiments and having 95% of them fail on me. I was still as outspoken as ever.</p>
<p>What changed? I think it's that I wrote a <a href="https://thinkingwithtypes.com/">book</a>.</p>
<p>All of a sudden my status jumped up a few rungs because my ideas were worthy of <em>a book.</em> I mean, it's a great book and <a href="https://thinkingwithtypes.com/">you should go buy a copy</a>, but it's nothing novel. It's just a consolidation of lots of existing techniques, that I painstakingly put in the time and sweat to understand for myself.</p>
<p>All of a sudden, people had a good educational resource, and it had my name attached to it. The book doesn't pull any punches --- it really and truly is a book of difficult things --- but it tries to introduce the ideas as gently and usefully as possible.</p>
<p>I think what happened is that people started thinking "man, this book is full of really hard concepts. The guy who wrote it must be really smart." And they're not <em>wrong</em>, but that's not the point. Really, most of it I learned from long conversations with exceptionally kind and patient people like <a href="https://ren.zone/">Renzo Carbonara</a> and <a href="https://twitter.com/shajra?lang=en">Sukant Hajra</a>.</p>
<p>The point is that all people see are my successes. They see this book in its finished form, but are shielded away from the tortuous months I spent writing it. They aren't aware of just how many hours I spent fighting with LaTeX. Or of cajoling my designer-then-girlfriend to help me pick fonts. Or from the countless sleepless nights I spent spinning the ideas around in my head, trying as best I could to find something, <em>anything,</em> to grab on to.</p>
<p>None of it was exceptionally difficult. Mostly it was just tedious.</p>
<p>The book itself took four months to write, but the material took five years to <em>learn</em>. And that seemed like a waste of time if I wasn't able to amortize by that helping other people learn the same things.</p>
<p>Any idiot could have done what I did --- read blog posts, think hard about them, write some code that used the idea, and then write one chapter at a time. That's it. There was no magic.</p>
<h2 id="iii">III</h2>
<p>The point I'm trying to make here is that, on the inside, it doesn't feel remarkable to do "great" work. Csongor says "there was not much brilliance involved" in his work. I'm convinced that any idiot could have put together the same book that I did.</p>
<p>The hardest part is putting in the time, and even that's not very hard if you find the process enjoyable and meaningful.</p>
<p>To quote <a href="https://www.gwern.net/index">Gwern</a>:</p>
<blockquote>
<p>None of these seems special to me. Anyone could’ve compiled the DNB FAQ; anyone could’ve kept a list of online pharmacies where one could buy modafinil; someone tried something similar to my Google shutdown analysis before me (and the fancier statistics were all standard tools). If I have done anything meritorious with them, it was perhaps simply putting more work into them than someone else would have.</p>
</blockquote>
<p>Or as <a href="https://twitter.com/jkachmar">Joe Kachmar</a> says:</p>
<blockquote>
<p>It's really nice to realize that most/all of the work on these big projects is just folks who have relentlessly kept tugging on some thread until it unravels neatly for them.</p>
</blockquote>
<p>There likely are problems out there that are <em>brilliance-constrained,</em> but I'd argue that there 100x more problems which are merely <em>effort-constrained.</em> This is good news, because while it's not clear how to become smarter, it's very doable to just throw more energy at something.</p>
<p>Maybe the problems you consider to be exceptionally hard are just ones that merely require some dedication --- and a doggedness to fix, come-what-may.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Every Good Boy Deserves Fruit</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>http://sandymaguire.me/blog/egbdf/index.html</link>
      <guid>http://sandymaguire.me/blog/egbdf/index.html</guid>
      <pubDate>2019-02-18T00:44:00Z</pubDate>
      <content:encoded><![CDATA[
        <p>I just wanted to announce that <a href="https://everygoodboydeservesfruit.com/">I've launched a new website</a>, documenting the things I learn in my quest to <a href="/blog/play-lots-of-music/">just play lots of music</a>.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>Book Review: Utopia for Realists</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>http://sandymaguire.me/blog/utopia-for-realists/index.html</link>
      <guid>http://sandymaguire.me/blog/utopia-for-realists/index.html</guid>
      <pubDate>2019-02-05T13:37:00Z</pubDate>
      <content:encoded><![CDATA[
        <p>Rutger Bergman's <a href="https://www.goodreads.com/book/show/40876575-utopia-for-realists">Utopia for Realists</a> is a book whose primary thesis is that we should have a guaranteed minimum income (GMI).</p>
<p>I must admit, I was pretty sold on a guaranteed minimum income before reading this book. I hadn't thought too much about it, besides the fact that lots of smart people I know say it's a good idea, and that obviously we're going to need a solution to what happens to humans after we automate away all of the jobs.</p>
<p>After reading this book, I am significantly less on-board with the idea.</p>
<p>What it boils down to is that Utopia for Realists isn't very good. If these are the best arguments for a GMI, well... let's hope that they're not the best arguments for a GMI.</p>
<p>I can't make up my mind on whether this book is <em>merely incompetent</em> or actively <em>dishonest.</em></p>
<p>For example, the book discusses the <a href="https://en.wikipedia.org/wiki/Speenhamland_system">Speenhamland system</a>, which it describes as an early form of GMI, and then discusses a contemporary report which described it as a failed experiment. But then Utopia for Realists turns around with the sentence "more recent research has revealed that the Speenhamland system was actually a success." A description of how the original study was supposedly flawed, but no citation to back it up. No reference to which "more recent research" reveals resounding success. There are lots of other citations in the book. Why not one here?</p>
<p>Utopia makes some other bold claims without backing them up; here's a few that bothered me enough to mark them down:</p>
<ul>
<li>"Ultimately, the perfect, self-regulating market proved an illusion."</li>
<li>"The historian Brian Steesland... emphasizes that, had Nixon's plan gone ahead, the ramifications would have been huge... No longer would there be such a thing as the 'deserving' or 'undeserving poor' [no citation]"</li>
</ul>
<p>There was another time I wanted to check a source. The book makes a case for "giving housing/money to homeless people is cheaper than dealing with the consequences of not" via a case study. I'm willing to believe this; prevention <em>is</em> usually a better strategy than treatment. OK, fine. What I wanted to check was the cost breakdown; Utopia describes the project as costing \$217 million, and being responsible for getting 6,500 people off of the streets over nine years. This struck me as being exorbitantly expensive, and I wanted to check their methodologies and math.</p>
<p>The given citation for this "unmitigated success" was to a random pdf on the Utrecht municipal website which doesn't exist anymore. I didn't try any harder than this to find the document. <a href="https://www.binnenlandsbestuur.nl/sociaal/achtergrond/achtergrond/rotterdam-haalt-daklozen-in-huis.127589.lynkx">The citation describing the experiment</a> points to a Dutch news site (that Google annoyingly refuses to translate) that looks more like an op-ed than anything official, but more damningly, doesn't provide any links closer to the original source.</p>
<p>Bregman's grasp of economics is pretty tenuous. For example:</p>
<blockquote>
<p>From a certain perspective, [Bastiat] says, breaking a window sounds like a fine idea. "Imagine it costs six francs to repair the damage. And imagine that this creates a commercial gain of six francs---<em>I confess there's no arguing with this reasoning.</em> The glazier comes along, does his work, and happily pockets six francs..." [emphasis mine]</p>
</blockquote>
<p><em>No arguing?</em> Except that the glazier charges a fair price to replace the window, so he is only marginally better off after replacing the window, but the world <a href="https://www.youtube.com/watch?v=rK6VGP1B2Hw">has lost one window</a> and the owner is the worse-off for it.</p>
<p>He goes on:</p>
<blockquote>
<p>Unlike the manufacture of a fridge or a car, history lessons and doctor's [sic] checkups can't simply be made "more efficient."</p>
</blockquote>
<p>This is absurdly stupid. We've all taken classes that were long-winded and boring. The quality of a teacher has a huge bearing on how efficiently we learn from them. Websites like <a href="https://www.khanacademy.org/">Khan Academy</a> are teaching entire university courses in a fraction of the time it would take to do through the usual channels. Doctors' checkups <em>can</em> and <em>have</em> been made more efficient; it's not an accident that doctors carry stethoscopes and have access to MRI machines.</p>
<p>But Bergman persists:</p>
<blockquote>
<p>... the government is gobbling up a growing share of the economic pie... this phenomenon is now known as "Baumol's cost disease," basically says that prices in labor-intensive sectors such as healthcare and education increase faster than prices in sectors where most of the work can be more extensively automated... shouldn't we be calling this a blessing, rather than a disease? After all, the more efficient our factories and our computers, the less efficient our healthcare and education need to be; that is, the more time we have left to attend to the old and infirm and to organize education on a more personal scale.</p>
<p>When you're obsessed with efficient and productivity, it's difficult to see the real value of education and care. Which is why so many politicians and taxpayers alike see only the costs. They don't realize that the richer a country becomes the more it should be spending on teachers and doctors.</p>
</blockquote>
<p>No no no no no no. Cost disease doesn't say "we spend too much on healthcare and education." It says "<a href="https://slatestarcodex.com/2017/02/09/considerations-on-cost-disease/">we spend too much on healthcare and education <em>on the margin.</em></a>" Which is to say that in less cost-diseased countries, spending an additional \$1,000 will buy you a lot more than <em>the same additional</em> \$1,000 in a more cost-diseased place.</p>
<p>Cost disease is the phenomenon that we're <em>paying more to get less.</em> For example, Thailand has a booming dentistry industry among Australians because you can get the same quality work done for significantly less money. This isn't "exploiting Thai workers" nor is it "taking jobs away from Australians"---it's just Australian cost disease.</p>
<hr />
<p>A significantly smaller portion of the book describes the fifteen-hour workweek is an ideal one. Sure! Sounds good! But, Bergman says, "breaking the vicious cycle [of the 40 hour workweek] will require collective action---by companies, or better yet, by countries."</p>
<p>I don't get this one. If you want to work less than 40 hours, just... work less than 40 hours? Nobody is forcing you, except your spending habits. As it happens, life is actually pretty cheap. Find a small apartment, share it with some roommates, and eat a lot of rice. You can definitely manage to do it for less than \$800 a month if you're willing to shop around---and especially if you're willing to move.</p>
<p>The secret is to just not spend money. That means stop eating lavish meals. Don't get a pet. Don't buy a vehicle. Stop drinking and smoking and give up whatever other vices you have that cost a bunch of money. It sounds dumb, but the secret to not working very much is to not need a lot of money.</p>
<p>And then use your extra time to <a href="/blog/become-a-programmer">learn how to do something valuable</a> so that you can work even less.</p>
<hr />
<p>At the end of the day, I get the strong impression that this book was <a href="https://www.lesswrong.com/posts/34XxbRFe54FycoCDw/the-bottom-line">written backwards</a>. Bergman very clearly believes in his cause, and has worked backwards trying to find arguments that support it---as evidenced by the sloppy citation work, numerous straw-men and gross-misunderstanding of the arguments against his point of view.</p>
<p>It's a particularly bad sign when a book is <em>so bad that it makes people on your side agree with you less after reading it.</em> Give this one a miss, but if you're looking for a <em>significantly</em> better resource championing MGI, look no further than <a href="https://slatestarcodex.com/2018/05/16/basic-income-not-basic-jobs-against-hijacking-utopia/">Slate Star Codex's take on same</a>.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>2019 Goal: Just Play Lots of Music</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>http://sandymaguire.me/blog/play-lots-of-music/index.html</link>
      <guid>http://sandymaguire.me/blog/play-lots-of-music/index.html</guid>
      <pubDate>2019-01-31T09:27:00Z</pubDate>
      <content:encoded><![CDATA[
        <p>I promised myself it would happen by today, or not at all. Since I don't want to not do it, I guess I'd better stop procrastinating and write about <em>my plans for 2019.</em></p>
<p>My friend Sara challenged me to do something different this year. She suggested I become the captain of a sports team. This is too scary even for me[^1], but I decided to follow the spirit of the idea.</p>
<p>Rather than doing quantitatively more of what I have been, it's time to try something new. And so: my major goal for the year is to learn how to play music. To be more specific, I want to be able to play piano like <a href="https://www.youtube.com/watch?v=ZslxpecR7vE">Jerry Garcia plays guitar.</a></p>
<p>I once met a guy noodling around on the ukulele in the Vilnius airport. I struck up conversation with him and asked how he was so good. The answer? "Never do the same thing twice. Always be pushing yourself to try new things."</p>
<p>Along those lines, there's this fantastic proverb from <a href="https://www.goodreads.com/book/show/187633.Art_and_Fear">Art and Fear</a>:</p>
<blockquote>
<p>The ceramics teacher announced on opening day that he was dividing the class into two groups. All those on the left side of the studio, he said, would be graded solely on the quantity of work they produced, all those on the right solely on its quality. His procedure was simple: on the final day of class he would bring in his bathroom scales and weigh the work of the “quantity” group: fifty pound of pots rated an “A”, forty pounds a “B”, and so on. Those being graded on “quality”, however, needed to produce only one pot — albeit a perfect one — to get an “A”. Well, came grading time and a curious fact emerged: the works of highest quality were all produced by the group being graded for quantity. It seems that while the “quantity” group was busily churning out piles of work - and learning from their mistakes — the “quality” group had sat theorizing about perfection, and in the end had little more to show for their efforts than grandiose theories and a pile of dead clay.</p>
</blockquote>
<p>Unfortunately this story is apocryphal, but it resounds pretty strongly with my experience. It's a trap I see beginner programmers fall into all the time; they continually ask "how can I get good at programming?" and the answer is always "do more programming." That's not to say that some good advice can't help steer you away from the weeds, but fundamentally, <em>theory is only as valuable as it improves your craft.</em> <a href="/blog/too-smart/">Theory for its own sake is nothing but mental masturbation.</a></p>
<p>This is a trap that I often fall into myself. Rather than just getting started, I spend lots of time <em>thinking</em> about the best way to get started. Sometimes if the risk of failure is particularly high, that might be the approach to go. But it's usually not.</p>
<p>So I want to take this year as a case study in the "quantity over quality" approach. To that end, I'm going to learn, record and upload a new song every day that I'm not sick or traveling. <a href="https://soundcloud.com/santino-maguire">I started yesterday.</a></p>
<p>I reserve the right to change the specifics of this goal if it ends up conflicting with actually getting better at music---eg. maybe the overhead of learning and recording everyday will get in the way of actually practicing more directly-musical things. But I'll worry about those problems if I come to them.</p>
<p>So, here's the plan. I'm going to learn and play and record these songs, and then every day, listen to yesterday's. I'm going to ask myself "why isn't this as good as it could be?" and then I'm going to spend the day focusing on whichever aspect seems like it will have the most impact. Presumably in time this can't help but force me to get good.</p>
<p>Nothing big or dramatic this year: just play lots of music and give myself permission to do it badly until it starts being good.</p>
      ]]></content:encoded>
  </item>
  <item>
      <title>How and Why to Become a Programmer</title>
      <author>sandy@sandymaguire.me (Sandy Maguire)</author>
      <link>http://sandymaguire.me/blog/become-a-programmer/index.html</link>
      <guid>http://sandymaguire.me/blog/become-a-programmer/index.html</guid>
      <pubDate>2019-01-23T14:00:00Z</pubDate>
      <content:encoded><![CDATA[
        <p>I find myself recommending programming as a career path to <em>lots and lots of people.</em> It gets boring to write the same arguments over and over, so I thought I should just do it once more: the definitive guide to why programming is a great choice and how to break into it.</p>
<h2 id="why">Why?</h2>
<p>Programming is fucking cushy.</p>
<p><em>The money is really good.</em> Like, we're talking <em>really good.</em> If you're willing to relocate, your first job will probably pay around \$105,000 USD in salary. In addition, you're going to make stock options (worth maybe \$50,000 a year if it's for a company that actually makes money---worth nothing otherwise.) Also, lots of big companies will actually <em>pay you money</em> to sign their contract. It's called a signing bonus, you get it on your first paycheck, and it's somewhere between \$10,000 and \$80,000. The only catch is that you have to stay for a year. After that, you're free to go somewhere else, get a 15% raise, and another big signing bonus. Before tax, you're looking at about \$200,000 USD per year on your first job, if you can land one of the good ones. If not, or if you're not willing to move, let's say \$100,000.</p>
<p><em>You don't need any qualifications.</em> Nobody in the industry cares whether or not you went to university. They don't give a shit about what you look like or who your family is; all they care about is whether or not you can reverse a linked list in linear time[^1]---whether or not you can code. In other words, it's an industry in which skills trump qualifications every time. The interviews rarely have any "soft" questions; you're just asked to program a solution to a problem. If you can do it and your solution doesn't suck and you don't seem like an asshole, you get the job. Sometimes if your code is <em>really</em> good, they'll even look the other way on the asshole bit.</p>
<p><em>Everything you need is free.</em> There's this neat culture in programming circles of people who make cool stuff and then give it away for free. That means <em>every tool you need</em> is already made and is freely available. And if it isn't, programming skills are the same ones you need in order to build the tools that don't yet exist. See <em>working on real projects</em> later in this essay.</p>
<p><em>It's a hot industry.</em> Seriously hot. There are simply not enough people good at computers in the world. <em>Everyone</em> is hiring. I'm not kidding about that; <em>I get roughly one job offer per week, sent to me by people I've never met before.</em> And this number is low compared to lots of people in the industry---some people get a few every day. How many times per year do you turn down six-figure jobs? In addition, you don't need to worry about your job being automated-away---the people doing the automating-away are programmers, and <a href="https://en.wikipedia.org/wiki/G%C3%B6del%27s_incompleteness_theorems">some very fortunate mathematics</a> prove that when we can automate programming we must already be able to automate everything else.</p>
<p><em>Programming is a creative endeavor.</em> Most of your time is spent thinking about how to solve the problem; very little of it is <em>actually</em> solving it. Knowing the problem is like 99% of the way there. That means you can work from anywhere---in the park, in the shower, on the beach in Mexico. Seriously, I've gotten paid to work from all of those locations. The people in charge don't really know what you do; they just know that if they feed you energy drinks and buy a foosball table for the office, somehow lots of money gets made. Unless you work at a bank, your boss will recognize this and let you do your thing. So long as you get your work done and make a halfhearted attempt to make it to meetings, nobody cares what hours you hold.</p>
<h2 id="why-not">Why Not?</h2>
<p>There are a few reasons you might not want to become a programmer.</p>
<p><em>You</em> need to spend a lot of time on a computer.</p>
<p><em>You feel like you won't be good at it.</em> In my experience, computer programming skills overlap with a lot of other things. If your job consists of working with lots of different tools and understanding when to use which, then programming is going to be a good a fit. If your job consists of diagnosing why things are broken, programming will be a very good fit. If your job consists of making simple things and then assembling them into more complicated things, programming will be a good fit.</p>
<p><em>You need to spend a lot of time interacting with people who are lacking some crucial social skills.</em> These people are not unpleasant by any means, just weird as fuck. In time, you will become more like them than you are comfortable admitting to yourself. It's OK.</p>
<p><em>"Isn't tech just full of tech bros?"</em> No. See the above point.</p>
<p><em>It can be hard to experience your accomplishments.</em> Unlike carpentry, when you've finished a software project, there's usually nothing that you can point at and say "yes, I made that." The construction exists only in the platonic world of ideas. Relatedly:</p>
<p><em>Nobody except other nerds will understand what the fuck you do.</em> Despite hundreds of hours of talking with my mom about my interests, she's never going to truly understand what it is that I do. And she <em>actually wants to know.</em> If sharing understanding of your work with a wide group of people is something you really care about, this might not be a good career path.</p>
<h2 id="why-not-why-not">Why Not "Why Not?"?</h2>
<p>Is any of those "why nots" <em>really</em> worth \$200,000 a year to you?</p>
<h2 id="getting-in-the-door">Getting in the Door</h2>
<p>"Ok, great! I'm sold on this exciting career aspect, Sandy! But how can I make it happen?" I can practically hear you shouting enthusiastically at me! Before we get into the "how to learn this stuff" bit, I want to give you a little more insight into the industry.</p>
<p><em>The cards are stacked in your favor.</em> OK, get this. Every company I've ever worked at has this thing called a "referral policy." The deal is, if someone who works there hands your resume to the boss, and you end up getting hired, then that person makes somewhere between \$5,000 and \$20,000. I think the idea is to inspire people to recommend their friends, but they get the money regardless of whether they know you or not.</p>
<p>That's right. People get paid if they can get you a job where they work. This means LinkedIn is your best friend. You can just search for people who work at any particular company you want to work for, send them cold emails saying "here's my resume, please refer me," and they will because these people are smart and would like to make some easy extra money on top of their already-exuberant salaries.</p>
<p><em>But wait, there's more.</em> You remember how I said that you'll be getting a job offer every week? Those things are sent by people called "recruiters" whose job it is is to hire people. It turns out that <em>they too</em> get paid if they can find you a job. Which means that if you're lazy, you can also just email random recruiters you find on LinkedIn and tell them you're on the job market. <em>They will literally do the job hunt for you.</em></p>
<h2 id="learning-how-to-program">Learning How to Program</h2>
<p>All of this sounds too good to be true, doesn't it?</p>
<p>Unfortunately, all of the above information is only applicable if you know how to program. Fortunately, while learning it is <em>hard,</em> you can do it in six months if you're dedicated. Most people in this field are mostly self-taught. You don't need to go to school or get a certificate or anything.</p>
<p>Seriously. Six months. No bullshitting. It'll be grueling, twelve-hour days, but it's doable. That's like, what, \$5,000 worth of food and rent? <strong>Go take out a loan and quit your job and focus on this. It's probably the most important thing you'll ever do.</strong> Programming has a 100% employment rate. In six months you can pay back that loan with your signing bonus and then take the rest of it to the bank.</p>
<p>So how do you do it? You don't need a special computer---whatever you already have will work, as long as it has a keyboard (no phones, sorry!). Go buy a copy of <a href="http://www.crackingthecodinginterview.com">Cracking the Coding Interview</a>, and use that as a todo-list of things you need to learn. This is a fantastic book that will prepare you for what sorts of questions you can expect in a technical interview. If you can correctly answer every exercise in the book in less than an hour, you are already more qualified than the vast majority of people I've ever interviewed.</p>
<p>To clarify, the goal is <em>not</em> to memorize the solutions to the questions. That won't work; interviewers can sniff that out a mile away. But if you can genuinely work out the answer to all of those questions based only on what's inside your head, <em>you know more than enough.</em> At that point you are <em>highly employable.</em> Enjoy those six figures, baby!</p>
<p>So, with Cracking the Coding Interview as your guide, how do you actually <em>learn this stuff?</em> Two fold: you ask lots of questions and you do projects. To ask questions, a good place to start is at <a href="https://www.reddit.com/r/learnprogramming/">/r/learnprogramming</a>. A <em>really</em> good place to start is their FAQ question <a href="https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_getting_started">Where Do I Get Started</a>. Everyone is really very friendly.</p>
<p>But beware! There is a <em>very common</em> misstep here that bites beginners---the communities that help beginners are often <em>too helpful,</em> and many a new programmer will develop <em>learned helplessness.</em> Which is to say they'll automatically ask for help whenever they see a new problem, without first giving their best attempt to solve it. <strong>Do not fall into this trap---you might never get out.</strong></p>
<p>In order to do projects, pick something on the computer that <em>you wish existed</em> or <em>something that does exist but you can immediately see how it could be better.</em> Then dive in, and systematically work on bringing this idea to fruition. The only way to learn how to program is by actually doing it and bumping into reality. Having a real project in mind is a great way to accidentally discover holes in your knowledge. Ask for help when you need it, but give it a solid 30 minutes of <em>thinking really hard</em> first.</p>
<p>Additionally, having made real projects is great for your resume. It helps show companies that you're <em>serious</em>, even if you don't have professional experience.</p>
<h2 id="making-a-great-resume">Making a Great Resume</h2>
<p>Keep in mind that nobody in this industry cares about anything. Except for whether or not you can code and whether or not you can make them money. Seriously. That's it. As a result, you want to tailor your resume with this in mind. My rules on this are simple:</p>
<p><em>Make the relevant information easy to find.</em> At the very top, list what programming languages you know, and how well you know them. Chop out words if they're not necessary. Short and sweet.</p>
<p><em>If it's not impressive, take it off.</em> This includes both work experience and bullet points. If your last job was a barista, nobody cares. Get rid of it. Unless you were the shift manager and realized that the company practices were terrible and you singlehandedly introduced a new system that saved ten thousand dollars a year. It's OK if this makes your resume short; better to be short and impressive than long and dull.</p>
<p><em>Put things in context.</em> Programming people are an analytical bunch, so put in numbers wherever you can. Make sure the numbers are <em>meaningful</em> to someone who wasn't there. For example, saying you increased something's speed by 10 seconds is meaningless; instead say you improved it by 95%. Rather than saying you lead a project, say that you lead the team responsible for the company's most important project. Only if it's true, of course. If you don't know how to put things in context, go read <a href="https://www.amazon.ca/How-Measure-Anything-Intangibles-Business/dp/1452654204">this book</a>.</p>
<h2 id="conclusion">Conclusion</h2>
<p>So that's all I've got. If you're dissatisfied with your job or your money situation, I can't think of a single reason why you shouldn't commit yourself to this approach 100%. It will be hard and scary, but it will all be over in a few months and you'll be laughing about the experience all the way to the bank.</p>
<p>If you have questions about any of this, or if you just need a pep-talk, feel free to <a href="mailto:%20sandy@sandymaguire.me">email me</a>. I'd love to hear from you.</p>
      ]]></content:encoded>
  </item>
</channel>
</rss>
